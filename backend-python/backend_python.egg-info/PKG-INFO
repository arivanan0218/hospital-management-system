Metadata-Version: 2.4
Name: backend-python
Version: 0.1.0
Summary: Hospital Management System MCP Server using FastMCP
Requires-Python: >=3.12
Description-Content-Type: text/markdown
Requires-Dist: mcp[cli]
Requires-Dist: pydantic>=2.0.0
Requires-Dist: fastmcp>=0.2.0

# Hospital Management System - Python Backend

This is a Python implementation of the Hospital Management System MCP (Model Context Protocol) server using FastMCP.

## Features

- **User Management**: Create, read, update, and delete users
- **Random User Generation**: Generate fake users with realistic data
- **Resource Access**: Access user data through MCP resources
- **Structured Output**: All tools return properly typed data using Pydantic models

## Tools Available

- `create-user`: Create a new user with name, email, address, and phone
- `create-random-user`: Generate a random user with fake data
- `get-user-by-id`: Retrieve a specific user by their ID
- `list-users`: Get all users in the system
- `delete-user`: Remove a user from the database
- `update-user`: Update an existing user's information

## Resources Available

- `users://all`: Get all users data
- `users://{user_id}/profile`: Get specific user profile

## Installation

1. Install dependencies:
```bash
pip install -e .
```

2. Run the server:
```bash
python server.py
```

## Usage

The server implements the Model Context Protocol and can be used with any MCP-compatible client. It manages user data in a JSON file (`data/users.json`) and provides both tools and resources for user management operations.

## Data Structure

Users are stored with the following structure:
```json
{
  "id": 1,
  "name": "John Doe",
  "email": "john@example.com",
  "address": "123 Main St, City, State 12345",
  "phone": "(555) 123-4567"
}
```
